состояния  = {
 'Россия' : 'RU' ,
 «Германия» : «DE» ,
 'Узбекистан' : 'УЗ' ,
 'Зимбабве' : 'ZW' ,
 'Турция' : 'ТР'
}

 # создание базового набора стран и некоторых городов в них
города  = {
 «УЗ» : «Газли» ,
 «ТР» : «Сарыгерме» ,
 'DE' : 'Мюнхен'
}

 # добавление нескольких городов
города [ 'ZW' ] =  'Гверу'
города [ 'RU' ] =  'Москва'

# вывод некоторых городов
напечатать ( '-'  *  10 )
print ( " В стране ZW есть город: " , города [ 'ZW' ])
print ( "В стране RU есть город: " , города [ 'RU' ])

 # вывод некоторых стран
напечатать ( '-'  *  10 )
print ( "Аббревиатура Турции: " , указывает [ 'Турция' ])
print ( "Аббревиатура Германии: " , указывает [ 'Германия' ])

# обязательно с учетом стран и словаря городов
печать ( '-'  *  10 )
print ( "В Турции есть город: " , города [ штаты [ 'Турция' ]])
print ( "В Германии есть город: " , города [ штаты [ 'Германия' ]])

 # вывод аббревиатура всех стран
печать ( '-'  *  10 )
для  состояния , сокращение в списке ( states.items  ( ) ) : 
    print ( f" { state } имеет аббревиатуру { abbrev } " )


печать ( '-'  *  10 )
для  аббревиатуры город в списке ( города  .элементы ( ) ): 
     print ( f"B страна { аббревиатура } есть город { город } " )

печать ( '-'  *  10 )
для  состояния , сокращение в списке ( states.items  ( ) ) : 
     print ( f"B страна { состояние } используется аббревиатура { сокращение } " )
     print ( f"И есть город { города [ аббревиатура ] } " )

печать ( '-'  *  10 )
состояние  =  состояния . получить ( 'СССП' )

если  не  указать :
      print ( "нпошу прощения, СССР распался." )
